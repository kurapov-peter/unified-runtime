name: Nightly

on:
  schedule:
    - cron: '0 23 * * *'

jobs:
  ubuntu-build:
    name: Build - Ubuntu
    strategy:
      matrix:
        build_type: [Debug, Release]
        compiler: [{c: clang, cxx: clang++}]

    runs-on: 'ubuntu-22.04'

    steps:
    - uses: actions/checkout@v3

    - name: Install apt packages
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen ${{matrix.compiler.c}}

    - name: Install pip packages
      run: pip install -r third_party/requirements.txt

    - name: Download DPC++
      run: |
        sudo apt install libncurses5
        wget -O ${{github.workspace}}/dpcpp_compiler.tar.gz https://github.com/intel/llvm/releases/download/sycl-nightly%2F20230626/dpcpp-compiler.tar.gz
        tar -xvf ${{github.workspace}}/dpcpp_compiler.tar.gz

    - name: Setup DPC++
      run: |
        source ${{github.workspace}}/dpcpp_compiler/startup.sh

    - name: Configure CMake
      run: >
        cmake
        -B${{github.workspace}}/build
        -DCMAKE_C_COMPILER=${{matrix.compiler.c}}
        -DCMAKE_CXX_COMPILER=${{matrix.compiler.cxx}}
        -DUR_ENABLE_TRACING=OFF
        -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
        -DUR_BUILD_TESTS=ON
        -DUR_FORMAT_CPP_STYLE=ON
        -DUR_USE_ASAN=ON
        -DUR_USE_UBSAN=ON
        -DUR_DPCXX=${{github.workspace}}/dpcpp_compiler/bin/clang++

    - name: Generate source from spec, check for uncommitted diff
      run: cmake --build ${{github.workspace}}/build --target check-generated

    - name: Build
      run: cmake --build ${{github.workspace}}/build -j $(nproc)

    - name: Fuzz long test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.build_type}} --output-on-failure -L "fuzz-long"
